<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daixiaoyu.dailybook.mapper.BillMapper">
    <resultMap id="bill" type="com.daixiaoyu.dailybook.entity.Bill">
        <result property="id" column="id"/>
        <result property="accountBookId" column="account_book_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="cost" column="cost"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="accountBookName" column="accountBookName"/>
        <result property="categoryName" column="categoryName"/>
        <result property="occurTime" column="occur_time"/>
    </resultMap>

    <insert id="addBill">
        INSERT INTO public.bill
        (account_book_id, category_id, "cost", remark, create_time, update_time, occur_time)
        VALUES(#{bill.accountBookId}, #{bill.categoryId}, #{bill.cost}, #{bill.remark}, now(), now(), #{bill.occurTime})
    </insert>

    <delete id="deleteBill">
        DELETE FROM public.bill
        WHERE id = #{id}
    </delete>

    <update id="updateBill">
        UPDATE public.bill
        SET account_book_id=#{bill.accountBookId}, category_id=#{bill.categoryId},
            "cost"=#{bill.cost}, remark=#{bill.remark}, update_time=now(), occur_time = #{bill.occurTime}
        <where>
            AND id = #{bill.id}
        </where>
    </update>

    <select id="queryBill" resultMap="bill">
        SELECT bill.id, account_book_id, category_id, "cost", remark, bill.create_time, bill.update_time,
        account_book.name as "accountBookName", category.name as "categoryName", occur_time
        FROM public.bill
        INNER JOIN account_book on bill.account_book_id::integer = account_book.id
        INNER JOIN category on bill.category_id::integer = category.id
        <where>
            <if test="condition.accountBookId != null and condition.accountBookId != ''">
                AND account_book_id::integer = #{condition.accountBookId}
            </if>
            <if test="condition.categoryId != null and condition.categoryId != ''">
                AND category_id::integer = #{condition.categoryId}
            </if>
        </where>
    </select>
</mapper>
